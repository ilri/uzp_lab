<?php
/**
* Copyright 2011 ILRI
*
* This file is part of UZP - 99H lab system.
*
* UZP - 99H lab system is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* UZP - 99H lab system is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with UZP - 99H lab system.  If not, see <http://www.gnu.org/licenses/>.
*/

/**
 * This is the main configuration file for the field aliquoting system
 *
 * @category   Configuration
 * @package    DBase
 * @author     Kihara Absolomon <a.kihara@cgiar.org>
 * @since      v1.0
 */

class Config extends GeneralTasks{
   /**
    * @var array  An array holding the logging settings for the system
    */
   static public $logSettings = array(
      'logErrors' => true,
      'logFileDir' => 'errors',     //the directory where the log files will be created. If not set no logs will be created
      'logFileSize' => '10',        //error log file in MB
      'combined' => false,          //whether to combine all log messages in one file or create separate files for each log level. might be good for production env
      'workingDir' => '/',
      'logLevel' => 'extensive'     //Logs all the system calls. useful for debugging
   );

   /**
    * @var array  An array defining the various levels of logs
    */
   static public $logLevels = array(
      'debug' => array('Debug:', 'debug.log'),           //Debugging information
      'info' => array('Info:', 'info.log'),              //Information entry on what the system is doing
      'warning' => array('Warning:', 'warnings.log'),   //Doing something which is not meant to be done
      'error' => array('Error:', 'errors.log'),
      'aliquots' => array('', 'aliquots.log'),
      'fatal' => array('Fatal:', 'fatal.log')
   );


   /**
    * @var array  An array that holds the connection settings used to connect to the database
    */
   static public $config = array(
      'user' => 'azizi_scriptsro',                      // username to use to connect to the dbase
      'pass' => '2Nse!TY&h2DS',                      // password of the defined user
      'dbase' => 'azizi_uzp_99h_lab',             // database name
      'session_dbase' => 'azizi_uzp_99h_lab_kemri',    // database name
      'dbloc' => 'boran.ilri.cgiar.org',                // database location
      'mysqldump' => '/usr/bin/mysqldump',
      'mysql' => '/usr/bin/mysql',
      'rootdir' => '/var/www/html/azizi.ilri.org/uzp_lab_kemri',
      'site' => 'KEMRI',
      'remote_server' => 'http://localhost/~jrogena/uzp_lab_2/mod_ajax.php'
   );

   /**
    * @var  array An array with the uploads configuration settings
    */
   static public $uploads = array(
      'destinationFolder' => '',   //where uploads will finally be saved
      'sizeLimit' => 10485760      // max file size in bytes
   );

   static public $contact=" Please contact the system administrator.";

   /**
    * @var  integer  In minutes, the time between...fuck timeout in minutes...if u cant understand this, then u r a ...
    */
   static public $timeout = 30;

   static public $GeneralTasks;

   static public $psswdSettings=array(
      'changeOnLogin' => true,
      'useSalt' => true,
      'default' => 'done'
   );

   /**
    * @var string An absolute path to the folder where the common scripts are located
    */
   static public $commonFolderPath = 'common/';

   /**
    * @var  array    An array with the modules that we have the download option
    */
   static public $downloadableModules = array('labels');

   /**
    * @var  boolean  A flag to determine whether we want to download a file or not
    */
   static public $downloadFile = false;

   public function __construct(){
      $this->GeneralTasks = new GeneralTasks();
   }
}
?>
